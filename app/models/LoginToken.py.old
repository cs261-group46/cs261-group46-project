from app import db
from datetime import datetime, timedelta
from app.utils.auth import get_login_token_timeout
from app.utils.auth import generate_login_token

class LoginToken(db.Model):
    __tablename__ = 'login_tokens'
    login_token = db.Column(db.String(128), primary_key=True)
    user_id = db.Column(db.String(36), db.ForeignKey('users.id'), nullable=False)
    login_date = db.Column(db.DateTime, default=datetime.utcnow())
    login_timeout = db.Column(db.DateTime, default=get_login_token_timeout())
    user = db.relationship('User', backref='login_token', lazy=True)

    def __repr__(self):
        return '<LoginToken %r>' % self.name

    def refresh_token(self):
        if self.login_timeout > datetime.now():
            self.login_timeout = get_login_token_timeout()

    @classmethod
    def create_token(cls, user):
        obj = cls(
            login_token=generate_login_token(),
            user=user
        )
        db.session.add(obj)
        db.session.commit()